#Использовать logos
#Использовать fs
#Использовать cmdline
#Использовать "."

Перем ВозможныеКоманды;
Перем Лог;

Процедура ИнициализацияОкружения()

	Лог = Исходники.ПолучитьЛог();

	ПарсерАргументовКоманднойСтроки = Новый ПарсерАргументовКоманднойСтроки();

	Исходники.УстановитьПараметрыСборкиРазборкиДляКоманднойСтроки(ПарсерАргументовКоманднойСтроки);

	ПарсерАргументовКоманднойСтроки.ДобавитьИменованныйПараметр("--key", "Ключ массива файлов из json-файла настроек", Истина);
	ПарсерАргументовКоманднойСтроки.ДобавитьИменованныйПараметр("--cachekey", "Ключ изменения файлов из build/cache.json", Истина);

	ПарсерАргументовКоманднойСтроки.ДобавитьИменованныйПараметр(Исходники.КлючКаталогБинарныхФайлов(), "Каталог сборки исходников");

	ПарсерАргументовКоманднойСтроки.ДобавитьПараметр("Каталог",
		"Каталог, где находятся исходники для сборки бинарных файлов (epf,erf)");

	Аргументы = ПарсерАргументовКоманднойСтроки.Разобрать(АргументыКоманднойСтроки);

	ОдинКаталог = Аргументы["Каталог"];
	Лог.Отладка("Получили каталог для сборки <%1>", "" + ОдинКаталог);
	КлючМассиваФайловВФайлеНастроек = Аргументы["--key"];
	Лог.Отладка("Получили ключ массива файлов в json-файле настроек для сборки <%1>", "" + КлючМассиваФайловВФайлеНастроек);

	КлючКэшаИзмененияФайлов = Аргументы["--cachekey"];
	Лог.Отладка("Получили ключ кэша измененных файлов <%1>", "" + КлючКэшаИзмененияФайлов);
	ОписаниеСборкиРазборки = Исходники.ОписаниеСборкиРазборки(Аргументы, Лог);
	ПутьКаталогаСборки = ОписаниеСборкиРазборки.ПутьКаталогаСборки;

	Если Не ПустаяСтрока(ОдинКаталог) Тогда

		Лог.Отладка("Использую один каталог для сборки, %1", ОдинКаталог);
		МассивПутей = Новый Массив();
		МассивПутей.Добавить(ОдинКаталог);

	Иначе

		Лог.Отладка("Нахожу массив путей из файла настроек");
		МассивПутей = Исходники.ПапкиВнешнихФайлов(КлючМассиваФайловВФайлеНастроек);

	КонецЕсли;

	КаталогПроекта = Исходники.КаталогПроекта();
	Лог.Отладка("Собираю каталог проекта %1", КаталогПроекта);
	КаталогПроекта = ФС.ПолныйПуть(КаталогПроекта);
	Лог.Отладка("ЗапуститьОбработку - КаталогПроекта (полный путь) %1", КаталогПроекта);

	Для каждого Элемент из МассивПутей Цикл
		ЗапуститьОбработку(Элемент, КаталогПроекта, ПутьКаталогаСборки, КлючКэшаИзмененияФайлов);
	КонецЦикла;

КонецПроцедуры

Процедура ЗапуститьОбработку(Знач Путь, Знач КаталогПроекта, Знач ПодкаталогСборки, Знач КлючКэшаИзмененияФайлов = Неопределено)

	Лог.Отладка("ЗапуститьОбработку - Собираю каталог %1", Путь);
	Лог.Отладка("ЗапуститьОбработку - %1", ПодкаталогСборки);
	Лог.Отладка("ЗапуститьОбработку - КлючКэшаИзмененияФайлов %1", КлючКэшаИзмененияФайлов);
	// ПодкаталогСборки = ?(Бинарники1СХранятсяРядомСИсходниками, "", ПутьКаталогаСборки + "/");

	КаталогСоответствующийКорню = Исходники.КаталогСоответствующийКорню();
	Лог.Отладка("ЗапуститьОбработку - КаталогСоответствующийКорню %1", КаталогСоответствующийКорню);

	Файл = Новый Файл(Путь);
	ОтносительныйПуть = ФС.ОтносительныйПуть(КаталогПроекта, Файл.ПолноеИмя);
	Лог.Отладка("ЗапуститьОбработку - Файл.ПолноеИмя %1", Файл.ПолноеИмя);
	Лог.Отладка("ЗапуститьОбработку - ОтносительныйПуть %1", ОтносительныйПуть);
	Если (ОтносительныйПуть = КаталогСоответствующийКорню Или Путь = КаталогСоответствующийКорню)
			И Файл.ЭтоКаталог() Тогда
		ЧтоИКуда = СтрШаблон("./%2 ./%1", ПодкаталогСборки, КаталогСоответствующийКорню);
		Лог.Отладка("ЗапуститьОбработку - 1 ЧтоИКуда %1", ЧтоИКуда);
	Иначе
		ОтносительныйПутьРодителя = ФС.ОтносительныйПуть(КаталогПроекта, Файл.Путь);
		Лог.Отладка("ЗапуститьОбработку - ОтносительныйПутьРодителя %1", ОтносительныйПутьРодителя);

		Если ОтносительныйПутьРодителя = КаталогСоответствующийКорню Тогда
			ЧтоИКуда = СтрШаблон("%3/%1 ./%2", Файл.ИмяБезРасширения, ПодкаталогСборки, КаталогСоответствующийКорню);
			Лог.Отладка("ЗапуститьОбработку - 2 ЧтоИКуда %1", ЧтоИКуда);
		Иначе
			ЧтоИКуда = СтрШаблон("%1 ./%2%1", Путь, ПодкаталогСборки);
			Лог.Отладка("ЗапуститьОбработку - 3 ЧтоИКуда %1", ЧтоИКуда);
		КонецЕсли;
	КонецЕсли;

	ШаблонЗапуска = СтрШаблон("oscript ./tools/runner.os compileepf %1 --ibname /F./build/ibservice", ЧтоИКуда);
	Если ЗначениеЗаполнено(КлючКэшаИзмененияФайлов) Тогда
		ШаблонЗапуска = СтрШаблон("%1 --cachekey %2", ШаблонЗапуска, КлючКэшаИзмененияФайлов);
	КонецЕсли;
	Исходники.ИсполнитьКоманду(ШаблонЗапуска);

КонецПроцедуры

ИнициализацияОкружения();
